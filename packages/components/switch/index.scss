$color-neutral-stroke-accessible: var(--colorNeutralStrokeAccessible);
$color-neutral-stroke-accessible-hover: var(
  --colorNeutralStrokeAccessibleHover
);
$color-neutral-stroke-accessible-pressed: var(
  --colorNeutralStrokeAccessiblePressed
);
$color-compound-brand-background: var(--colorCompoundBrandBackground);
$color-compound-brand-background-hover: var(
  --colorCompoundBrandBackgroundHover
);
$color-compound-brand-background-pressed: var(
  --colorCompoundBrandBackgroundPressed
);
$color-transparent-stroke: var(--colorTransparentStroke);
$color-transparent-stroke-interactive: var(--colorTransparentStrokeInteractive);
$color-neutral-background-disabled: var(--colorNeutralBackgroundDisabled);
$color-transparent-stroke-disabled: var(--colorTransparentStrokeDisabled);
$color-neutral-foreground-disabled: var(--colorNeutralForegroundDisabled);
$color-neutral-foreground-inverted: var(--colorNeutralForegroundInverted);

@mixin transition($properties, $duration, $timing-function) {
  transition: $properties $duration $timing-function;
}

.fluent-switch {
  align-items: flex-start;
  box-sizing: border-box;
  display: inline-flex;
  position: relative;

  &-lively {
    .fluent-switch__indicator {
      font-size: 12px;
      padding: 3px;
      @include transition(font-size, 0.1s, ease);
      @include transition(padding, 0.1s, ease);

      & > .fluent-switch__default-indicator {
        @include transition(width, 0.1s, ease);
      }
    }

    .fluent-switch__input:not(:disabled):hover {
      & ~ .fluent-switch__indicator {
        font-size: 14px;
        padding: 2px;
      }
    }

    .fluent-switch__input:not(:disabled):active {
      & ~ .fluent-switch__indicator > .fluent-switch__default-indicator {
        width: 1.25em;
        border-radius: 0.5em;
      }
    }
  }

  &__input {
    top: 0;
    left: 0;
    box-sizing: border-box;
    cursor: pointer;
    height: 100%;
    margin: 0;
    opacity: 0;
    position: absolute;
    width: calc(40px + 2 * var(--spacingHorizontalS));

    &:enabled {
      &:checked {
        & ~ .fluent-switch__indicator {
          background-color: $color-compound-brand-background;
          border-color: $color-transparent-stroke;
          display: flex;
          justify-content: flex-end;

          > .fluent-switch__default-indicator {
            position: relative;
            background-color: $color-neutral-foreground-inverted;
            @include transition(transform, 0.5s, ease-in-out);
            @include transition(width, 0.2s, ease);
          }
        }

        &:hover {
          & ~ .fluent-switch__indicator {
            background-color: $color-compound-brand-background-hover;
            border-color: $color-transparent-stroke-interactive;
          }

          &:active ~ .fluent-switch__indicator {
            background-color: $color-compound-brand-background-pressed;
            border-color: $color-transparent-stroke-interactive;
          }
        }
      }

      &:not(:checked) {
        & ~ .fluent-switch__indicator {
          color: $color-neutral-stroke-accessible;
          border-color: $color-neutral-stroke-accessible;
        }

        &:hover {
          & ~ .fluent-switch__indicator {
            color: $color-neutral-stroke-accessible-hover;
            border-color: $color-neutral-stroke-accessible-hover;
          }

          &:active ~ .fluent-switch__indicator {
            color: $color-neutral-stroke-accessible-pressed;
            border-color: $color-neutral-stroke-accessible-pressed;
          }
        }
      }
    }

    &:disabled {
      cursor: default;

      &:not(:checked) ~ .fluent-switch__indicator {
        border-color: var(--colorNeutralStrokeDisabled);
      }

      &:checked ~ .fluent-switch__indicator {
        background-color: $color-neutral-background-disabled;
        border-color: $color-transparent-stroke-disabled;
      }

      ~ .fluent-switch__indicator {
        color: $color-neutral-foreground-disabled;
      }

      ~ .fluent-switch__label {
        cursor: default;
        color: $color-neutral-foreground-disabled;
      }
    }
  }

  &-label-above {
    flex-direction: column;
  }

  &-label-before {
    & .fluent-switch__input {
      right: 0;
      left: unset;
    }
  }

  &__label {
    margin-top: calc((20px - var(--lineHeightBase300)) / 2);
    margin-bottom: calc((20px - var(--lineHeightBase300)) / 2);
    cursor: pointer;
    padding-left: var(--spacingHorizontalXS);
    padding: var(--spacingVerticalS) var(--spacingHorizontalS);
  }

  &__default-indicator {
    display: inline-block;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    vertical-align: middle;
    background-color: $color-neutral-stroke-accessible;
    @include transition(transform, var(--durationNormal), var(--curveEasyEase));
  }

  &__indicator {
    color: $color-neutral-stroke-accessible;
    border-color: $color-neutral-stroke-accessible;
    border-radius: var(--borderRadiusCircular);
    border: 1px solid;
    line-height: 0;
    box-sizing: border-box;
    fill: currentcolor;
    flex-shrink: 0;
    font-size: 18px;
    height: 20px;
    margin: var(--spacingVerticalS) var(--spacingHorizontalS);
    pointer-events: none;
    @include transition(
      background,
      var(--durationNormal),
      var(--curveEasyEase)
    );
    @include transition(border, var(--durationNormal), var(--curveEasyEase));
    @include transition(color, var(--durationNormal), var(--curveEasyEase));
    width: 40px;
  }
}
